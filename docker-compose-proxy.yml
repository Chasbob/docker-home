version: "3.8"

########################### NETWORKS
networks:
  traefik_net:
    external:
      name: traefik_net
  default:
    driver: bridge
  media:
    external:
      name: media

services:
  # Traefik - Reverse Proxy
  # docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 traefik_net
  # Subnet range 192.168.0.0/16 covers 192.168.0.0 to 192.168.255.255
  # touch $USERDIR/traefik/acme/acme.json
  # chmod 600 $USERDIR/traefik/acme/acme.json
  # touch $USERDIR/traefik/traefik.log
  traefik:
    image: traefik:v2.3
    restart: always
    depends_on:
      - dockerproxy
      - watchtower
      - influxdb
      - oauth
    networks:
      traefik_net:
        ipv4_address: 192.168.90.254
      docker_sock:
      public:
      media:
    dns:
      - $DNS_SERVER
    ports:
      # https://www.reddit.com/r/docker/comments/c1wrep/traefik_reverse_proxy_question_docker_overlay/
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 44344
        published: 44344
        protocol: tcp
        mode: host
      - target: 8044
        published: 8044
        protocol: tcp
        mode: host
    volumes:
      - ./traefik:/etc/traefik
      - $USERDIR/traefik/acme:/acme
      - $USERDIR/traefik/log:/var/log/traefik
      - $USERDIR/shared:/shared
    environment:
      CLOUDFLARE_DNS_API_TOKEN: $CLOUDFLARE_API_KEY
      DOMAINNAME: $DOMAINNAME
    labels:
      traefik.enable: "true"
      # HTTP Routers
      traefik.http.routers.dashboard.rule: Host(`traefik.$DOMAINNAME`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.tls: "true"
      traefik.http.routers.dashboard.tls.certresolver: cloudflare-dns
      traefik.http.routers.dashboard.tls.domains[0].main: $DOMAINNAME
      traefik.http.routers.dashboard.tls.domains[0].sans: "*.$DOMAINNAME"

  oauth:
    image: thomseddon/traefik-forward-auth:2
    restart: always
    networks:
      traefik_net:
    environment:
      PROVIDERS_GENERIC_OAUTH_AUTH_URL: "$AUTH0_DOMAIN/authorize"
      PROVIDERS_GENERIC_OAUTH_TOKEN_URL: "$AUTH0_DOMAIN/oauth/token"
      PROVIDERS_GENERIC_OAUTH_USER_URL: "$AUTH0_DOMAIN/userinfo"
      PROVIDERS_GENERIC_OAUTH_SCOPE: "openid profile email"
      PROVIDERS_GENERIC_OAUTH_CLIENT_ID: "$AUTH0_CLIENT_ID"
      PROVIDERS_GENERIC_OAUTH_CLIENT_SECRET: "$AUTH0_CLIENT_SECRET"
      DEFAULT_PROVIDER: generic-oauth
      SECRET: $OAUTH_SECRET
      COOKIE_DOMAIN: $DOMAINNAME
      INSECURE_COOKIE: "false"
      AUTH_HOST: oauth.$DOMAINNAME
      URL_PATH: /_oauth
      LIFETIME: 2592000 # 30 days
      LOG_LEVEL: DEBUG
      LOG_FORMAT: pretty
    labels:
      traefik.enable: "true"
      ## HTTP Routers
      traefik.http.routers.oauth-rtr.entrypoints: websecure, websecure-public
      traefik.http.routers.oauth-rtr.rule: Host(`oauth.$DOMAINNAME`)
      traefik.http.routers.oauth-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.oauth-rtr.service: oauth-svc
      traefik.http.services.oauth-svc.loadbalancer.server.port: 4181
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
