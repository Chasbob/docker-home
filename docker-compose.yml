---
version: "3.8"

networks:
  docker_sock:
    name: docker_sock
  public:
    name: public
services:
  dockerproxy:
    environment:
      CONTAINERS: 3
    image: tecnativa/docker-socket-proxy
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - docker_sock

  watchtower:
    depends_on:
      - dockerproxy
    command: --cleanup --interval 300
    image: containrrr/watchtower
    network_mode: none
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  influxdb:
    image: influxdb:1.5.4-alpine
    restart: always
    networks:
      traefik_net:
        ipv4_address: 192.168.90.200
    volumes:
      - $USERDIR/influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_DB: $INFLUXDB_DB
      INFLUXDB_WRITE_USER: $INFLUXDB_WRITE_USER
      INFLUXDB_WRITE_USER_PASSWORD: $INFLUXDB_WRITE_USER_PASSWORD
      INFLUXDB_READ_USER: $INFLUXDB_READ_USER
      INFLUXDB_READ_USER_PASSWORD: $INFLUXDB_READ_USER_PASSWORD

  grafana:
    image: grafana/grafana:6.7.2
    restart: always
    user: $PUID
    networks:
      traefik_net:
    volumes:
      - $USERDIR/grafana:/var/lib/grafana
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      GF_SECURITY_ADMIN_USER: $GRAFANA_ADMIN_USERNAME
      GF_SECURITY_ADMIN_PASSWORD: $GRAFANA_ADMIN_PASSWORD
    labels:
      traefik.enable: "true"
      ## HTTP Routers
      traefik.http.routers.grafana-rtr.entrypoints: websecure
      traefik.http.routers.grafana-rtr.rule: Host(`grafana.$DOMAINNAME`)
      traefik.http.routers.grafana-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.grafana-rtr.service: grafana-svc
      traefik.http.services.grafana-svc.loadbalancer.server.port: 3000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  portainer:
    image: portainer/portainer:latest
    restart: always
    command: --no-auth
    networks:
      - docker_sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $USERDIR/portainer/data:/data
    environment:
      - TZ=$TZ
    labels:
      traefik.enable: "true"
      traefik.docker.network: docker_sock
      ## HTTP Routers
      traefik.http.routers.portainer-rtr.entrypoints: websecure
      traefik.http.routers.portainer-rtr.rule: >-
        Host(`portainer.$DOMAINNAME`) ||
        (Host(`portainer.$DOMAINNAME`) && PathPrefix(`/api`))
      traefik.http.routers.portainer-rtr.tls: "true"
      ## HTTP Services
      traefik.http.routers.portainer-rtr.service: portainer-svc
      traefik.http.services.portainer-svc.loadbalancer.server.port: 9000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
